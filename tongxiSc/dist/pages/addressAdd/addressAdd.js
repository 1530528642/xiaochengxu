"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var daaty = require("../../utils/api2.js");
var tip = require("../../utils/tip.js");
var utily = require("../../utils/util.js");
var app = getApp();
exports.default = Page({
  // districtId
  data: {
    address: {
      id: 0,
      provinceId: 0,
      cityId: 0,
      districtId: 0,
      address: '',
      name: '',
      mobile: '',
      isDefault: 0,
      provinceName: '',
      cityName: '',
      areaName: ''
    },
    addressId: 0,
    openSelectRegion: false,
    selectRegionList: [{ id: 0, name: '省份', pid: 1, type: 1 }, { id: 0, name: '城市', pid: 1, type: 2 }, { id: 0, name: '区县', pid: 1, type: 3 }],
    regionType: 1,
    regionList: [],
    selectRegionDone: false
  },
  bindinputMobile: function bindinputMobile(event) {
    var address = this.data.address;
    address.mobile = event.detail.value;
    this.setData({
      address: address
    });
  },
  bindinputName: function bindinputName(event) {
    var address = this.data.address;
    address.name = event.detail.value;
    this.setData({
      address: address
    });
  },
  bindinputAddress: function bindinputAddress(event) {
    var address = this.data.address;
    address.address = event.detail.value;
    this.setData({
      address: address
    });
  },
  bindIsDefault: function bindIsDefault() {
    var address = this.data.address;
    address.isDefault = !address.isDefault;
    this.setData({
      address: address
    });
  },
  getAddressDetail: function getAddressDetail() {
    var that = this;
    daaty.AddressDetail(that.data.addressId, null, successFay);
    function successFay(res, sourceObj) {
      console.log(res.data);
      if (res.data) {
        console.log(88888899999);
        that.setData({
          address: res.data
        });
      }
    }
  },
  setRegionDoneStatus: function setRegionDoneStatus() {
    var that = this;
    var doneStatus = that.data.selectRegionList.every(function (item) {
      return item.id != 0;
    });

    that.setData({
      selectRegionDone: doneStatus
    });
  },
  chooseRegion: function chooseRegion() {
    var that = this;
    this.setData({
      openSelectRegion: !this.data.openSelectRegion
    });
    //设置区域选择数据
    var address = this.data.address;
    if (address.provinceId > 0 && address.cityId > 0 && address.districtId > 0) {
      var selectRegionList = this.data.selectRegionList;
      selectRegionList[0].id = address.provinceId;
      selectRegionList[0].name = address.provinceName;
      selectRegionList[0].pid = 0;

      selectRegionList[1].id = address.cityId;
      selectRegionList[1].name = address.cityName;
      selectRegionList[1].pid = address.provinceId;

      selectRegionList[2].id = address.districtId;
      selectRegionList[2].name = address.areaName;
      selectRegionList[2].pid = address.cityId;

      this.setData({
        selectRegionList: selectRegionList,
        regionType: 3
      });
      this.getRegionList(address.cityId);
    } else {
      this.setData({
        selectRegionList: [{ id: 0, name: '省份', pid: 0, type: 1 }, { id: 0, name: '城市', pid: 0, type: 2 }, { id: 0, name: '区县', pid: 0, type: 3 }],
        regionType: 1
      });
      this.getRegionList(0);
    }

    this.setRegionDoneStatus();
  },

  onLoad: function onLoad(options) {
    // 页面初始化 options为页面跳转所带来的参数
    this.setData({ userId: options.userId });
    console.log(options);
    if (options.id && options.id != 0) {
      this.setData({
        addressId: options.id
      });
      this.getAddressDetail();
    }
  },
  onReady: function onReady() {},
  selectRegionType: function selectRegionType(event) {
    var that = this;
    var regionTypeIndex = event.target.dataset.regionTypeIndex;
    var selectRegionList = that.data.selectRegionList;

    //判断是否可点击
    if (regionTypeIndex + 1 == this.data.regionType || regionTypeIndex - 1 >= 0 && selectRegionList[regionTypeIndex - 1].id <= 0) {
      return false;
    }

    this.setData({
      regionType: regionTypeIndex + 1
    });

    var selectRegionItem = selectRegionList[regionTypeIndex];

    this.getRegionList(selectRegionItem.pid);

    this.setRegionDoneStatus();
  },
  selectRegion: function selectRegion(event) {
    var that = this;
    var regionIndex = event.target.dataset.regionIndex;
    var regionItem = this.data.regionList[regionIndex];
    var regionType = regionItem.type;
    var selectRegionList = this.data.selectRegionList;
    selectRegionList[regionType - 1] = regionItem;

    if (regionType != 3) {
      this.setData({
        selectRegionList: selectRegionList,
        regionType: regionType + 1
      });
      this.getRegionList(regionItem.id);
    } else {
      this.setData({
        selectRegionList: selectRegionList
      });
    }

    //重置下级区域为空
    selectRegionList.map(function (item, index) {
      if (index > regionType - 1) {
        item.id = 0;
        item.name = index == 1 ? '城市' : '区县';
        item.pid = 0;
      }
      return item;
    });

    this.setData({
      selectRegionList: selectRegionList
    });

    that.setData({
      regionList: that.data.regionList.map(function (item) {
        //标记已选择的
        if (that.data.regionType == item.type && that.data.selectRegionList[that.data.regionType - 1].id == item.id) {
          item.selected = true;
        } else {
          item.selected = false;
        }
        return item;
      })
    });

    this.setRegionDoneStatus();
  },
  doneSelectRegion: function doneSelectRegion() {
    if (this.data.selectRegionDone === false) {
      return false;
    }

    var address = this.data.address;
    var selectRegionList = this.data.selectRegionList;
    address.provinceId = selectRegionList[0].id;
    address.cityId = selectRegionList[1].id;
    address.districtId = selectRegionList[2].id;
    address.provinceName = selectRegionList[0].name;
    address.cityName = selectRegionList[1].name;
    address.areaName = selectRegionList[2].name;
    this.setData({
      address: address,
      openSelectRegion: false
    });
  },
  cancelSelectRegion: function cancelSelectRegion() {
    this.setData({
      openSelectRegion: false,
      regionType: this.data.regionDoneStatus ? 3 : 1
    });
  },
  getRegionList: function getRegionList(regionId) {
    var that = this;
    var regionType = that.data.regionType;
    // console.log(regionId,"regionId")
    // return false;
    daaty.RegionList(regionId, null, successFay);
    function successFay(res, sourceObj) {
      that.setData({
        regionList: res.data.map(function (item) {
          //标记已选择的
          if (regionType == item.type && that.data.selectRegionList[regionType - 1].id == item.id) {
            item.selected = true;
          } else {
            item.selected = false;
          }

          return item;
        })
      });
    }
  },
  cancelAddress: function cancelAddress() {
    wx.navigateBack();
  },
  saveAddress: function saveAddress() {
    var address = this.data.address;

    if (address.name == '') {
      tip.showToast('请输入姓名');
      return false;
    }

    if (address.mobile == '') {
      tip.showToast('请输入手机号码');
      return false;
    }

    if (address.districtId == 0) {
      tip.showToast('请输入省市区');
      return false;
    }

    if (address.address == '') {
      tip.showToast('请输入详细地址');
      return false;
    }

    if (!utily.isValidPhone(address.mobile)) {
      tip.showToast('手机号不正确');
      return false;
    }

    var that = this;
    daaty.AddressSave(address.id, address.name, address.mobile, address.provinceId, address.cityId, address.districtId, address.address, address.isDefault, address.provinceName, address.cityName, address.areaName, null, successFay);
    function successFay(res, sourceObj) {
      //  if (res.errno === 0) {
      //返回之前，先取出上一页对象，并设置addressId
      var pages = getCurrentPages();
      var prevPage = pages[pages.length - 2];
      console.log(prevPage);
      if (prevPage.route == "pages/checkout/checkout") {
        prevPage.setData({
          addressId: res.data
        });

        try {
          console.log(res.data, 111122223333333);
          wx.setStorageSync('addressId', res.data);
        } catch (e) {}
        console.log("set address");
      }
      wx.navigateBack();
      // }
    }
  },

  onShow: function onShow() {
    // 页面显示

  },
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭

  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,