"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var daaty = require("../../utils/api2.js");
var utily = require("../../utils/util.js");
var app = getApp();
exports.default = Page({
  data: {
    footprintList: [],
    offset: 0,
    limit: 10,
    totalPages: 1
  },
  getFootprintList: function getFootprintList() {
    wx.showLoading({
      title: '加载中...'
    });
    var that = this;
    daaty.FootprintList(this.data.userid, that.data.offset, that.data.limit, null, successFay);
    function successFay(res, sourceObj) {
      for (var i = 0; i < res.data.footprintList.length; i++) {
        res.data.footprintList[i].addTime = utily.getDate(res.data.footprintList[i].addTime);
      }
      var f1 = that.data.footprintList;
      var f2 = res.data.footprintList;
      console.log(f1, 'f1');
      for (var _i = 0; _i < f2.length; _i++) {
        var last = f1.length - 1;
        if (last >= 0 && f1[last][0].addTime === f2[_i].addTime) {
          f1[last].push(f2[_i]);
        } else {
          var tmp = [];
          tmp.push(f2[_i]);
          f1.push(tmp);
        }
      }

      that.setData({
        footprintList: f1,
        totalPages: res.data.totalPages
      });
      wx.hideLoading();
    }
  },
  deleteItem: function deleteItem(event) {
    var that = this;
    var index = event.currentTarget.dataset.index;
    var iindex = event.currentTarget.dataset.iindex;
    var goodsId = this.data.footprintList[index][iindex].id;
    var touchTime = that.data.touchEnd - that.data.touchStart;
    console.log(touchTime);
    //如果按下时间大于350为长按  
    if (touchTime > 350) {
      wx.showModal({
        title: '',
        content: '要删除所选足迹？',
        success: function success(res) {
          if (res.confirm) {
            var successFay = function successFay(res, sourceObj) {
              wx.showToast({
                title: '删除成功',
                icon: 'success',
                duration: 2000
              });
              that.data.footprintList[index].splice(iindex, 1);
              if (that.data.footprintList[index].length == 0) {
                that.data.footprintList.splice(index, 1);
              }
              that.setData({
                footprintList: that.data.footprintList
              });
            };

            daaty.FootprintDelete(goodsId, null, successFay);
          }
        }
      });
    } else {
      wx.navigateTo({
        url: '/pages/goods/goods?id=' + goodsId
      });
    }
  },

  onLoad: function onLoad(options) {
    var userid = app.globalData.user.userId;
    this.setData({ userid: userid });
    this.getFootprintList();
  },
  onReachBottom: function onReachBottom() {
    if (this.data.totalPages > this.data.page) {
      this.setData({
        page: this.data.page + 1
      });
      this.getFootprintList();
    } else {
      wx.showToast({
        title: '没有更多用户足迹了',
        icon: 'none',
        duration: 2000
      });
      return false;
    }
  },

  onReady: function onReady() {},
  onShow: function onShow() {},
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭
  },
  //按下事件开始  
  touchStart: function touchStart(e) {
    var that = this;
    that.setData({
      touchStart: e.timeStamp
    });
    console.log(e.timeStamp + '- touchStart');
  },
  //按下事件结束  
  touchEnd: function touchEnd(e) {
    var that = this;
    that.setData({
      touchEnd: e.timeStamp
    });
    console.log(e.timeStamp + '- touchEnd');
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,