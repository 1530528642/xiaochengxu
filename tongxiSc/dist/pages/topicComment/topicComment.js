"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var daaty = require("../../utils/api2.js");
var tipy = require("../../utils/tip.js");
var crettime = require("../../utils/dateutils.js");
var app = getApp();
exports.default = Page({
  data: {
    comments: [],
    allCommentList: [],
    picCommentList: [],
    type: 0,
    valueId: 0,
    showType: 0,
    allCount: 0,
    hasPicCount: 0,
    allPage: 1,
    picPage: 1,
    offset: 0,
    limit: 10
  },
  getCommentCount: function getCommentCount() {
    var that = this;
    daaty.CommentCount(that.data.valueId, that.data.type, null, null, null, successFay);
    function successFay(res, sourceObj) {
      that.setData({
        allCount: res.data.allCount,
        hasPicCount: res.data.hasPicCount
      });
    }
  },
  getCommentList: function getCommentList() {
    var that = this;
    daaty.CommentList(that.data.valueId, that.data.type, that.data.offset, that.data.limit, that.data.showType, null, successFay);
    function successFay(res, sourceObj) {
      that.data.offset = that.data.offset + that.data.limit;
      for (var i = 0; i < res.data.data.length; i++) {
        res.data.data[i].addTime = crettime.getDate(res.data.data[i].addTime);
      }
      if (res.data.data.length == 0) {
        tipy.showToast("只有这么多内容哦");
      }
      if (that.data.showType == 0) {
        that.setData({
          allCommentList: that.data.allCommentList.concat(res.data.data),
          allPage: res.data.currentPage,
          comments: that.data.allCommentList.concat(res.data.data)
        });
      } else {
        that.setData({
          picCommentList: that.data.picCommentList.concat(res.data.data),
          picPage: res.data.currentPage,
          comments: that.data.picCommentList.concat(res.data.data)
        });
      }
    }
  },
  onLoad: function onLoad(options) {
    // 页面初始化 options为页面跳转所带来的参数
    this.setData({
      type: options.type,
      valueId: options.valueId,
      url: app.globalData.imgUrl
    });
    this.getCommentCount();
    this.getCommentList();
  },
  onReady: function onReady() {
    // 页面渲染完成

  },
  onShow: function onShow() {
    // 页面显示

  },
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭

  },
  switchTab: function switchTab() {
    this.setData({
      showType: this.data.showType == 1 ? 0 : 1
    });

    this.getCommentList();
  },
  onReachBottom: function onReachBottom() {
    console.log('onPullDownRefresh');

    // if ( this.data.showType == 0) {

    //   if (this.data.allCount / this.data.size < this.data.allPage) {
    //     return false;
    //   }

    //   this.setData({
    //     'allPage' : this.data.allPage + 1
    //   });
    // } else {
    //   if (this.data.hasPicCount / this.data.size < this.data.picPage) {
    //     return false;
    //   }

    //   this.setData({
    //     'picPage': this.data.picPage + 1
    //   });
    // }


    this.getCommentList();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,