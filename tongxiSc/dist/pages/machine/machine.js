"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var apis = require("../../utils/api.js");
var dates = require("../../utils/dateutils.js");
var converts = require("../../utils/convert.js");
var imgUrls = require("../../utils/util.js");
// var tmp = 0;
exports.default = Page({
  paging: function paging() {
    var _this = this;
    this.setData({ condition: 1 });
    var estate = wx.getStorageSync("uid");
    apis.machineLists({ estateId: estate, offset: _this.data.offset, limit: _this.data.limit }, 1, successFa, null, null);
    function successFa(data, sourceObj) {
      // console.log(data,55555)
      var offsets = _this.data.offset + _this.data.limit;
      var datas;
      for (var i = 0; i < data.data.length; i++) {
        data.data[i].qrPath = imgUrls.imgUrl(data.data[i].qrPath);
        datas = new Date(data.data[i].createTime);
        data.data[i].createTime = dates.getDate(data.data[i].createTime);
        data.data[i].allMoney = converts.huansuan(data.data[i].allMoney);
        _this.data.washnumber.push(data.data[i]);
      }
      _this.setData({ washnumber: _this.data.washnumber, offset: offsets, apiss: apis.domain });
      // console.log(_this.offset,_this.limit)
      var lengths = data.data.length;
      if (lengths < _this.data.limit) {
        _this.setData({ condition: 0 });
      } else {
        _this.setData({ condition: 2 });
      }
      // console.log(_this.data.condition)
    }
  },
  onLoad: function onLoad(option) {
    this.paging();
  },
  data: {
    washnumber: [],
    offset: 0,
    limit: 10,
    condition: 2,
    apiss: ""
  },
  onPullDownRefresh: function onPullDownRefresh() {
    this.setData({ washnumber: [], offset: 0 });
    this.paging();
    wx.stopPullDownRefresh();
  },
  onReachBottom: function onReachBottom() {
    this.paging();
  },
  tipUrl: function tipUrl(e) {
    // console.log(e)
    var uid = e.currentTarget.dataset.uid;
    wx.navigateTo({
      url: "../washtwo/washtwo?machineId=" + uid
    });
  }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hY2hpbmUud3hwIl0sIm5hbWVzIjpbImFwaXMiLCJyZXF1aXJlIiwiZGF0ZXMiLCJjb252ZXJ0cyIsImltZ1VybHMiLCJwYWdpbmciLCJfdGhpcyIsInNldERhdGEiLCJjb25kaXRpb24iLCJlc3RhdGUiLCJ3eCIsImdldFN0b3JhZ2VTeW5jIiwibWFjaGluZUxpc3RzIiwiZXN0YXRlSWQiLCJvZmZzZXQiLCJkYXRhIiwibGltaXQiLCJzdWNjZXNzRmEiLCJzb3VyY2VPYmoiLCJvZmZzZXRzIiwiZGF0YXMiLCJpIiwibGVuZ3RoIiwicXJQYXRoIiwiaW1nVXJsIiwiRGF0ZSIsImNyZWF0ZVRpbWUiLCJnZXREYXRlIiwiYWxsTW9uZXkiLCJodWFuc3VhbiIsIndhc2hudW1iZXIiLCJwdXNoIiwiYXBpc3MiLCJkb21haW4iLCJsZW5ndGhzIiwib25Mb2FkIiwib3B0aW9uIiwib25QdWxsRG93blJlZnJlc2giLCJzdG9wUHVsbERvd25SZWZyZXNoIiwib25SZWFjaEJvdHRvbSIsInRpcFVybCIsImUiLCJ1aWQiLCJjdXJyZW50VGFyZ2V0IiwiZGF0YXNldCIsIm5hdmlnYXRlVG8iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsT0FBUUMsUUFBUSxvQkFBUixDQUFaO0FBQ0EsSUFBSUMsUUFBU0QsUUFBUSwwQkFBUixDQUFiO0FBQ0EsSUFBSUUsV0FBWUYsUUFBUSx3QkFBUixDQUFoQjtBQUNBLElBQUlHLFVBQVdILFFBQVEscUJBQVIsQ0FBZjtBQUNBOztBQVVHSSxVQUFPLGtCQUFVO0FBQ2QsUUFBTUMsUUFBUSxJQUFkO0FBQ0EsU0FBS0MsT0FBTCxDQUFhLEVBQUNDLFdBQVUsQ0FBWCxFQUFiO0FBQ0EsUUFBSUMsU0FBU0MsR0FBR0MsY0FBSCxDQUFrQixLQUFsQixDQUFiO0FBQ0ZYLFNBQUtZLFlBQUwsQ0FBa0IsRUFBQ0MsVUFBU0osTUFBVixFQUFpQkssUUFBT1IsTUFBTVMsSUFBTixDQUFXRCxNQUFuQyxFQUEwQ0UsT0FBTVYsTUFBTVMsSUFBTixDQUFXQyxLQUEzRCxFQUFsQixFQUFvRixDQUFwRixFQUFzRkMsU0FBdEYsRUFBaUcsSUFBakcsRUFBdUcsSUFBdkc7QUFDQSxhQUFTQSxTQUFULENBQW1CRixJQUFuQixFQUF5QkcsU0FBekIsRUFBbUM7QUFDakM7QUFDSSxVQUFNQyxVQUFVYixNQUFNUyxJQUFOLENBQVdELE1BQVgsR0FBa0JSLE1BQU1TLElBQU4sQ0FBV0MsS0FBN0M7QUFDQSxVQUFJSSxLQUFKO0FBQ0MsV0FBSSxJQUFJQyxJQUFFLENBQVYsRUFBWUEsSUFBRU4sS0FBS0EsSUFBTCxDQUFVTyxNQUF4QixFQUErQkQsR0FBL0IsRUFBbUM7QUFDaENOLGFBQUtBLElBQUwsQ0FBVU0sQ0FBVixFQUFhRSxNQUFiLEdBQXNCbkIsUUFBUW9CLE1BQVIsQ0FBZVQsS0FBS0EsSUFBTCxDQUFVTSxDQUFWLEVBQWFFLE1BQTVCLENBQXRCO0FBQ0FILGdCQUFRLElBQUlLLElBQUosQ0FBU1YsS0FBS0EsSUFBTCxDQUFVTSxDQUFWLEVBQWFLLFVBQXRCLENBQVI7QUFDQVgsYUFBS0EsSUFBTCxDQUFVTSxDQUFWLEVBQWFLLFVBQWIsR0FBd0J4QixNQUFNeUIsT0FBTixDQUFjWixLQUFLQSxJQUFMLENBQVVNLENBQVYsRUFBYUssVUFBM0IsQ0FBeEI7QUFDQVgsYUFBS0EsSUFBTCxDQUFVTSxDQUFWLEVBQWFPLFFBQWIsR0FBd0J6QixTQUFTMEIsUUFBVCxDQUFrQmQsS0FBS0EsSUFBTCxDQUFVTSxDQUFWLEVBQWFPLFFBQS9CLENBQXhCO0FBQ0R0QixjQUFNUyxJQUFOLENBQVdlLFVBQVgsQ0FBc0JDLElBQXRCLENBQTJCaEIsS0FBS0EsSUFBTCxDQUFVTSxDQUFWLENBQTNCO0FBQ0Q7QUFDRmYsWUFBTUMsT0FBTixDQUFjLEVBQUN1QixZQUFXeEIsTUFBTVMsSUFBTixDQUFXZSxVQUF2QixFQUFrQ2hCLFFBQU9LLE9BQXpDLEVBQWlEYSxPQUFNaEMsS0FBS2lDLE1BQTVELEVBQWQ7QUFDQTtBQUNBLFVBQUlDLFVBQVVuQixLQUFLQSxJQUFMLENBQVVPLE1BQXhCO0FBQ0EsVUFBR1ksVUFBVTVCLE1BQU1TLElBQU4sQ0FBV0MsS0FBeEIsRUFBOEI7QUFDNUJWLGNBQU1DLE9BQU4sQ0FBYyxFQUFDQyxXQUFVLENBQVgsRUFBZDtBQUNELE9BRkQsTUFFSztBQUNIRixjQUFNQyxPQUFOLENBQWMsRUFBQ0MsV0FBVSxDQUFYLEVBQWQ7QUFDRDtBQUNEO0FBQ0E7QUFDTixHO0FBQ0QyQixVQUFPLGdCQUFTQyxNQUFULEVBQWdCO0FBQ3RCLFNBQUsvQixNQUFMO0FBQ0MsRztBQUNIVSxRQUFNO0FBQ0hlLGdCQUFXLEVBRFI7QUFFSGhCLFlBQU8sQ0FGSjtBQUdIRSxXQUFNLEVBSEg7QUFJSFIsZUFBVSxDQUpQO0FBS0h3QixXQUFNO0FBTEgsRztBQU9QSyxxQkFBa0IsNkJBQVU7QUFDeEIsU0FBSzlCLE9BQUwsQ0FBYSxFQUFDdUIsWUFBVyxFQUFaLEVBQWVoQixRQUFPLENBQXRCLEVBQWI7QUFDQSxTQUFLVCxNQUFMO0FBQ0FLLE9BQUc0QixtQkFBSDtBQUNBLEc7QUFDSEMsaUJBQWUseUJBQVk7QUFDdkIsU0FBS2xDLE1BQUw7QUFDSCxHO0FBQ0RtQyxVQUFPLGdCQUFTQyxDQUFULEVBQVc7QUFDaEI7QUFDQSxRQUFJQyxNQUFNRCxFQUFFRSxhQUFGLENBQWdCQyxPQUFoQixDQUF3QkYsR0FBbEM7QUFDQWhDLE9BQUdtQyxVQUFILENBQWM7QUFDRUMsV0FBSSxrQ0FBZ0NKO0FBRHRDLEtBQWQ7QUFHRCIsImZpbGUiOiJtYWNoaW5lLnd4cCIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGlzID0gIHJlcXVpcmUoXCIuLi8uLi91dGlscy9hcGkuanNcIilcbnZhciBkYXRlcyA9ICByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZGF0ZXV0aWxzLmpzXCIpXG52YXIgY29udmVydHMgPSAgcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NvbnZlcnQuanNcIilcbnZhciBpbWdVcmxzID0gIHJlcXVpcmUoXCIuLi8uLi91dGlscy91dGlsLmpzXCIpXG4vLyB2YXIgdG1wID0gMDtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgY29uZmlnOiB7XG4gICAgbmF2aWdhdGlvbkJhclRpdGxlVGV4dDogJ+aIkeeahOacuuWZqCcsXG4gICAgdXNpbmdDb21wb25lbnRzOiB7XG4gICAgICAgJ3d4Yy1saXN0JzogJ0BtaW51aS93eGMtbGlzdCcsXG4gICAgICAgJ3d4Yy1sb2FkbW9yZSc6ICdAbWludWkvd3hjLWxvYWRtb3JlJyxcbiAgICAgICAnd3hjLWNjJzogJ0BtaW51aS93eGMtY2MnXG4gICAgfVxuICB9LFxuICAgcGFnaW5nOmZ1bmN0aW9uKCl7XG4gICAgICBjb25zdCBfdGhpcyA9IHRoaXM7XG4gICAgICB0aGlzLnNldERhdGEoe2NvbmRpdGlvbjoxfSlcbiAgICAgIHZhciBlc3RhdGUgPSB3eC5nZXRTdG9yYWdlU3luYyhcInVpZFwiKVxuICAgIGFwaXMubWFjaGluZUxpc3RzKHtlc3RhdGVJZDplc3RhdGUsb2Zmc2V0Ol90aGlzLmRhdGEub2Zmc2V0LGxpbWl0Ol90aGlzLmRhdGEubGltaXR9LDEsc3VjY2Vzc0ZhLCBudWxsLCBudWxsKTtcbiAgICBmdW5jdGlvbiBzdWNjZXNzRmEoZGF0YSwgc291cmNlT2JqKXtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEsNTU1NTUpXG4gICAgICAgICAgY29uc3Qgb2Zmc2V0cyA9IF90aGlzLmRhdGEub2Zmc2V0K190aGlzLmRhdGEubGltaXQ7XG4gICAgICAgICAgdmFyIGRhdGFzO1xuICAgICAgICAgICBmb3IodmFyIGk9MDtpPGRhdGEuZGF0YS5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgICAgZGF0YS5kYXRhW2ldLnFyUGF0aCA9IGltZ1VybHMuaW1nVXJsKGRhdGEuZGF0YVtpXS5xclBhdGgpO1xuICAgICAgICAgICAgICBkYXRhcyA9IG5ldyBEYXRlKGRhdGEuZGF0YVtpXS5jcmVhdGVUaW1lKTtcbiAgICAgICAgICAgICAgZGF0YS5kYXRhW2ldLmNyZWF0ZVRpbWU9ZGF0ZXMuZ2V0RGF0ZShkYXRhLmRhdGFbaV0uY3JlYXRlVGltZSk7XG4gICAgICAgICAgICAgIGRhdGEuZGF0YVtpXS5hbGxNb25leSA9IGNvbnZlcnRzLmh1YW5zdWFuKGRhdGEuZGF0YVtpXS5hbGxNb25leSk7XG4gICAgICAgICAgICAgX3RoaXMuZGF0YS53YXNobnVtYmVyLnB1c2goZGF0YS5kYXRhW2ldKVxuICAgICAgICAgICB9XG4gICAgICAgICAgX3RoaXMuc2V0RGF0YSh7d2FzaG51bWJlcjpfdGhpcy5kYXRhLndhc2hudW1iZXIsb2Zmc2V0Om9mZnNldHMsYXBpc3M6YXBpcy5kb21haW59KVxuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKF90aGlzLm9mZnNldCxfdGhpcy5saW1pdClcbiAgICAgICAgICB2YXIgbGVuZ3RocyA9IGRhdGEuZGF0YS5sZW5ndGg7XG4gICAgICAgICAgaWYobGVuZ3RocyA8IF90aGlzLmRhdGEubGltaXQpe1xuICAgICAgICAgICAgX3RoaXMuc2V0RGF0YSh7Y29uZGl0aW9uOjB9KVxuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgX3RoaXMuc2V0RGF0YSh7Y29uZGl0aW9uOjJ9KVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhfdGhpcy5kYXRhLmNvbmRpdGlvbilcbiAgICAgICAgIH1cbiAgIH0sXG4gICBvbkxvYWQ6ZnVuY3Rpb24ob3B0aW9uKXtcbiAgICB0aGlzLnBhZ2luZygpXG4gICAgfSxcbiAgZGF0YToge1xuICAgICB3YXNobnVtYmVyOltdLFxuICAgICBvZmZzZXQ6MCxcbiAgICAgbGltaXQ6MTAsXG4gICAgIGNvbmRpdGlvbjoyLFxuICAgICBhcGlzczpcIlwiXG4gICB9LFxuIG9uUHVsbERvd25SZWZyZXNoOmZ1bmN0aW9uKCl7XG4gICAgIHRoaXMuc2V0RGF0YSh7d2FzaG51bWJlcjpbXSxvZmZzZXQ6MH0pXG4gICAgIHRoaXMucGFnaW5nKClcbiAgICAgd3guc3RvcFB1bGxEb3duUmVmcmVzaCgpXG4gICAgfSxcbiAgb25SZWFjaEJvdHRvbTogZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5wYWdpbmcoKVxuICB9LFxuICB0aXBVcmw6ZnVuY3Rpb24oZSl7XG4gICAgLy8gY29uc29sZS5sb2coZSlcbiAgICB2YXIgdWlkID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQudWlkO1xuICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICAgICAgICB1cmw6XCIuLi93YXNodHdvL3dhc2h0d28/bWFjaGluZUlkPVwiK3VpZFxuICAgICAgICAgICAgICAgIH0pXG4gIH1cbiAgXG59Il19