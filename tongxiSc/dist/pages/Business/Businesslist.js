"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
// var daaty =  require("../../utils/data.js")
var daaty = require("../../utils/api2.js");
var uitil = require("../../utils/util.js");
var app = getApp();
exports.default = Page({
  data: {
    // asondata:daaty.datajsondb
    cardList: [],
    isend: false,
    limit: 10,
    offset: 0,
    type: 0,
    path1: ['../../common/assets/tab/kca1.png', '../../common/assets/tab/akb1.png'],
    path2: ['../../common/assets/tab/844090894838752016.png', '../../common/assets/tab/dianzan_icon_default@2x.png'],
    binindex: 0,
    // dzarr:['a','b'],
    user: ''
    // good:0
  },
  getImg: function getImg(fileList, headImg) {
    if (fileList == null || fileList == '') {
      return headImg;
    }
    for (var i = 0; i < fileList.length; i++) {
      var f = fileList[i];
      if (f.scoureType == 11) {
        headImg = app.globalData.imgUrl + f.fileUrl;
        break;
      }
    }
    return headImg;
  },
  cardList: function cardList() {
    app.loading();
    var thery = this;
    var user = app.globalData.user;
    daaty.list(user.userId, thery.data.offset, thery.data.limit, null, successFa2);
    function successFa2(data, sourceObj) {
      // console.log(data,55555)
      if (data.data == 0 || data.data == null || data.data == '') {
        thery.setData({ isend: true });
        wx.hideLoading();
        wx.hideNavigationBarLoading(); //完成停止加载
        wx.stopPullDownRefresh(); //停止下拉刷新
        app.hideLing();
        return;
      }
      var length = data.data.length;
      if (length < thery.data.limit) {
        thery.setData({ isend: true });
      } else {
        var offset = thery.data.offset + thery.data.limit;
        thery.setData({ isend: false, offset: offset });
      }
      var cardList = thery.data.cardList;
      for (var i = 0; i < data.data.length; i++) {
        var result = data.data[i];
        result.headImg = thery.getImg(result.fileList, result.headImg);
        cardList.push(result);
      }
      console.log(data.data, 'cardList', cardList);

      thery.setData({ cardList: cardList, user: user });

      wx.hideLoading();
      wx.hideNavigationBarLoading(); //完成停止加载
      wx.stopPullDownRefresh(); //停止下拉刷新
      app.hideLing();
    }
  },
  operationList: function operationList(operationType) {
    app.loading();
    var thery = this;
    var user = app.globalData.user;
    daaty.operationList(operationType, user.userId, thery.data.offset, thery.data.limit, null, successFa2);
    function successFa2(data, sourceObj) {
      if (data.data == 0 || data.data == null || data.data == '') {
        thery.setData({ isend: true });
        wx.hideLoading();
        wx.hideNavigationBarLoading(); //完成停止加载
        wx.stopPullDownRefresh(); //停止下拉刷新
        app.hideLing();
        return;
      }

      var length = data.data.length;
      if (length < thery.data.limit) {
        thery.setData({ isend: true });
      } else {
        var offset = thery.data.offset + thery.data.limit;
        thery.setData({ isend: false, offset: offset });
      }
      var cardList = thery.data.cardList;
      for (var i = 0; i < data.data.length; i++) {
        var result = data.data[i];
        result.headImg = thery.getImg(result.fileList, result.headImg);
        cardList.push(result);
      }
      thery.setData({ cardList: cardList });
      wx.hideLoading();
      wx.hideNavigationBarLoading(); //完成停止加载
      wx.stopPullDownRefresh(); //停止下拉刷新
      app.hideLing();
    }
  },
  onLoad: function onLoad(options) {
    var thery = this;
    console.log('options', options);
    app.checkLoginStatus();
    var type = options.type;
    thery.setData({ type: type });
    var title = '';
    switch (type) {
      case '1':
        title = '互动雷达';
        break;
      case '2':
        title = '被转发';
        break;
      case '3':
        title = '被收藏';
        break;
      case '4':
        title = '被浏览';
        break;
      default:
        title = '';
    }
    wx.setNavigationBarTitle({
      title: title
    });
    thery.getList();
  },
  getList: function getList() {
    var thery = this;
    app.checkLoginStatus();
    var type = thery.data.type;
    var title = '';
    // var user=app.globalData.user;
    switch (type) {
      case '1':
        this.cardList();
        break;
      case '2':
        this.operationList(4);
        break;
      case '3':
        this.operationList(1);
        break;
      case '4':
        this.operationList(3);
        break;
      default:
    }
  },
  /**
  * 页面相关事件处理函数--监听用户下拉动作
  */
  onPullDownRefresh: function onPullDownRefresh() {
    // console.log('下拉');
    var thery = this;
    thery.setData({ offset: 0 });
    wx.showNavigationBarLoading(); //在标题栏中显示加载
    this.getList();
  },
  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function onReachBottom() {
    console.log('上拉');
    var thery = this;
    if (!thery.data.isend) {
      this.getList(0);
    } else {
      wx.showToast({
        title: '没有更多数据'
      });
    }
  },
  aksening: function aksening() {
    wx.navigateTo({
      url: '../manage/manage'
    });
  },
  mewcwe: function mewcwe(e) {
    wx.navigateTo({
      url: '../details/details?uid=' + e.currentTarget.dataset.uid
    });
  },
  mewcwebox1: function mewcwebox1(e) {
    var indec = e.currentTarget.dataset.indec;
    var cars = e.currentTarget.dataset.cars;
    var thy = this;
    uitil.camcewr(cars, 1, indec, thy);
  },
  mewcwebox2: function mewcwebox2(e) {
    var indec = e.currentTarget.dataset.indec;
    var cars = e.currentTarget.dataset.cars;
    var thy = this;
    uitil.camcewr(cars, 2, indec, thy);
    this.setData({ binindex: indec });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,