"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var WxParse = require("../../utils/util.js");
var daaty = require("../../utils/api2.js");
var cache = require("../../utils/cache.js");
var app = getApp();
var loginFlag = cache.getSync('loginFlag');
exports.default = Page({
  data: {
    id: 0,
    topic: {},
    topicList: [],
    commentCount: 0,
    commentList: [],
    offset: 0,
    limit: 10
  },
  onLoad: function onLoad(options) {
    // 页面初始化 options为页面跳转所带来的参数
    var that = this;
    that.setData({
      id: options.id
    });
    daaty.TopicDetail(that.data.id, null, successFay);
    function successFay(res, sourceObj) {
      that.setData({
        topic: res.data
      });
      WxParse.wxParse('topicDetail', 'html', res.data.content, that);
    }

    daaty.TopicDetail(that.data.id, null, successFay);
    function successFay(res, sourceObj) {
      // if (res.errno === 0) {
      that.setData({
        topicList: res.data
      });
      // }
    }
  },
  getCommentList: function getCommentList() {
    var that = this;
    daaty.CommentList(that.data.id, 0, that.data.offset, that.data.limit, 1, null, successFay);
    function successFay(res, sourceObj) {
      //  if (res.errno === 0) {
      that.setData({
        commentList: res.data.data,
        commentCount: res.data.count
      });
      // }
    }
  },
  postComment: function postComment() {
    if (!loginFlag) {
      wx.navigateTo({ url: "/pages/auth/login/login" });
    } else {
      wx.navigateTo({
        url: '/pages/topicCommentPost/topicCommentPost?valueId=' + this.data.id + '&type=1'
      });
    }
  },

  onReady: function onReady() {},
  onShow: function onShow() {
    // 页面显示
    this.getCommentList();
  },
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭

  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvcGljRGV0YWlsLnd4cCJdLCJuYW1lcyI6WyJXeFBhcnNlIiwicmVxdWlyZSIsImRhYXR5IiwiY2FjaGUiLCJhcHAiLCJnZXRBcHAiLCJsb2dpbkZsYWciLCJnZXRTeW5jIiwiZGF0YSIsImlkIiwidG9waWMiLCJ0b3BpY0xpc3QiLCJjb21tZW50Q291bnQiLCJjb21tZW50TGlzdCIsIm9mZnNldCIsImxpbWl0Iiwib25Mb2FkIiwib3B0aW9ucyIsInRoYXQiLCJzZXREYXRhIiwiVG9waWNEZXRhaWwiLCJzdWNjZXNzRmF5IiwicmVzIiwic291cmNlT2JqIiwid3hQYXJzZSIsImNvbnRlbnQiLCJnZXRDb21tZW50TGlzdCIsIkNvbW1lbnRMaXN0IiwiY291bnQiLCJwb3N0Q29tbWVudCIsInd4IiwibmF2aWdhdGVUbyIsInVybCIsIm9uUmVhZHkiLCJvblNob3ciLCJvbkhpZGUiLCJvblVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxVQUFVQyxRQUFRLHFCQUFSLENBQWQ7QUFDQSxJQUFNQyxRQUFTRCxRQUFRLHFCQUFSLENBQWY7QUFDQSxJQUFJRSxRQUFTRixRQUFRLHNCQUFSLENBQWI7QUFDQSxJQUFNRyxNQUFNQyxRQUFaO0FBQ0EsSUFBSUMsWUFBWUgsTUFBTUksT0FBTixDQUFjLFdBQWQsQ0FBaEI7O0FBTUVDLFFBQU07QUFDSkMsUUFBSSxDQURBO0FBRUpDLFdBQU8sRUFGSDtBQUdKQyxlQUFXLEVBSFA7QUFJSkMsa0JBQWMsQ0FKVjtBQUtKQyxpQkFBYSxFQUxUO0FBTUpDLFlBQU8sQ0FOSDtBQU9KQyxXQUFNO0FBUEYsRztBQVNOQyxVQUFRLGdCQUFVQyxPQUFWLEVBQW1CO0FBQ3pCO0FBQ0EsUUFBSUMsT0FBTyxJQUFYO0FBQ0FBLFNBQUtDLE9BQUwsQ0FBYTtBQUNYVixVQUFJUSxRQUFRUjtBQURELEtBQWI7QUFHRlAsVUFBTWtCLFdBQU4sQ0FBa0JGLEtBQUtWLElBQUwsQ0FBVUMsRUFBNUIsRUFBK0IsSUFBL0IsRUFBb0NZLFVBQXBDO0FBQ0UsYUFBU0EsVUFBVCxDQUFvQkMsR0FBcEIsRUFBeUJDLFNBQXpCLEVBQW1DO0FBQzdCTCxXQUFLQyxPQUFMLENBQWE7QUFDWFQsZUFBT1ksSUFBSWQ7QUFEQSxPQUFiO0FBR0FSLGNBQVF3QixPQUFSLENBQWdCLGFBQWhCLEVBQStCLE1BQS9CLEVBQXVDRixJQUFJZCxJQUFKLENBQVNpQixPQUFoRCxFQUF5RFAsSUFBekQ7QUFDTDs7QUFFSGhCLFVBQU1rQixXQUFOLENBQWtCRixLQUFLVixJQUFMLENBQVVDLEVBQTVCLEVBQStCLElBQS9CLEVBQW9DWSxVQUFwQztBQUNJLGFBQVNBLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCQyxTQUF6QixFQUFtQztBQUMvQjtBQUNBTCxXQUFLQyxPQUFMLENBQWE7QUFDWFIsbUJBQVdXLElBQUlkO0FBREosT0FBYjtBQUdGO0FBQ0Q7QUFDRixHO0FBQ0hrQixnQiw0QkFBaUI7QUFDZixRQUFJUixPQUFPLElBQVg7QUFDQWhCLFVBQU15QixXQUFOLENBQWtCVCxLQUFLVixJQUFMLENBQVVDLEVBQTVCLEVBQStCLENBQS9CLEVBQWlDUyxLQUFLVixJQUFMLENBQVVNLE1BQTNDLEVBQWtESSxLQUFLVixJQUFMLENBQVVPLEtBQTVELEVBQWtFLENBQWxFLEVBQW9FLElBQXBFLEVBQXlFTSxVQUF6RTtBQUNFLGFBQVNBLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCQyxTQUF6QixFQUFtQztBQUNqQztBQUNJTCxXQUFLQyxPQUFMLENBQWE7QUFDWE4scUJBQWFTLElBQUlkLElBQUosQ0FBU0EsSUFEWDtBQUVYSSxzQkFBY1UsSUFBSWQsSUFBSixDQUFTb0I7QUFGWixPQUFiO0FBSUo7QUFDRDtBQUNKLEc7QUFDREMsYSx5QkFBYztBQUNaLFFBQUksQ0FBQ3ZCLFNBQUwsRUFBZ0I7QUFDZHdCLFNBQUdDLFVBQUgsQ0FBYyxFQUFFQyxLQUFLLHlCQUFQLEVBQWQ7QUFDRCxLQUZELE1BR0s7QUFDREYsU0FBR0MsVUFBSCxDQUFjO0FBQ2RDLGFBQUssc0RBQXNELEtBQUt4QixJQUFMLENBQVVDLEVBQWhFLEdBQXFFO0FBRDVELE9BQWQ7QUFHSDtBQUNGLEc7O0FBQ0R3QixXQUFTLG1CQUFZLENBRXBCLEM7QUFDREMsVUFBUSxrQkFBWTtBQUNsQjtBQUNBLFNBQUtSLGNBQUw7QUFDRCxHO0FBQ0RTLFVBQVEsa0JBQVk7QUFDbEI7O0FBRUQsRztBQUNEQyxZQUFVLG9CQUFZO0FBQ3BCOztBQUVEIiwiZmlsZSI6InRvcGljRGV0YWlsLnd4cCIsInNvdXJjZXNDb250ZW50IjpbInZhciBXeFBhcnNlID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL3V0aWwuanNcIilcbmNvbnN0IGRhYXR5ID0gIHJlcXVpcmUoXCIuLi8uLi91dGlscy9hcGkyLmpzXCIpXG52YXIgY2FjaGUgPSAgcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NhY2hlLmpzXCIpXG5jb25zdCBhcHAgPSBnZXRBcHAoKVxudmFyIGxvZ2luRmxhZyA9IGNhY2hlLmdldFN5bmMoJ2xvZ2luRmxhZycpO1xuZXhwb3J0IGRlZmF1bHQge1xuICBjb25maWc6IHtcbiAgICBuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0OiAn5LiT6aKY6K+m5oOFJyxcbiAgICB1c2luZ0NvbXBvbmVudHM6IHt9XG4gIH0sXG4gIGRhdGE6IHtcbiAgICBpZDogMCxcbiAgICB0b3BpYzoge30sXG4gICAgdG9waWNMaXN0OiBbXSxcbiAgICBjb21tZW50Q291bnQ6IDAsXG4gICAgY29tbWVudExpc3Q6IFtdLFxuICAgIG9mZnNldDowLFxuICAgIGxpbWl0OjEwXG4gIH0sXG4gIG9uTG9hZDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAvLyDpobXpnaLliJ3lp4vljJYgb3B0aW9uc+S4uumhtemdoui3s+i9rOaJgOW4puadpeeahOWPguaVsFxuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICB0aGF0LnNldERhdGEoe1xuICAgICAgaWQ6IG9wdGlvbnMuaWRcbiAgICB9KTtcbiAgZGFhdHkuVG9waWNEZXRhaWwodGhhdC5kYXRhLmlkLG51bGwsc3VjY2Vzc0ZheSlcbiAgICBmdW5jdGlvbiBzdWNjZXNzRmF5KHJlcywgc291cmNlT2JqKXtcbiAgICAgICAgICB0aGF0LnNldERhdGEoe1xuICAgICAgICAgICAgdG9waWM6IHJlcy5kYXRhLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFd4UGFyc2Uud3hQYXJzZSgndG9waWNEZXRhaWwnLCAnaHRtbCcsIHJlcy5kYXRhLmNvbnRlbnQsIHRoYXQpO1xuICAgIH1cbiAgICAgIFxuICBkYWF0eS5Ub3BpY0RldGFpbCh0aGF0LmRhdGEuaWQsbnVsbCxzdWNjZXNzRmF5KVxuICAgICAgZnVuY3Rpb24gc3VjY2Vzc0ZheShyZXMsIHNvdXJjZU9iail7XG4gICAgICAgICAgLy8gaWYgKHJlcy5lcnJubyA9PT0gMCkge1xuICAgICAgICAgIHRoYXQuc2V0RGF0YSh7XG4gICAgICAgICAgICB0b3BpY0xpc3Q6IHJlcy5kYXRhXG4gICAgICAgICAgfSk7XG4gICAgICAgIC8vIH1cbiAgICAgIH1cbiAgICB9LFxuICBnZXRDb21tZW50TGlzdCgpIHtcbiAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgZGFhdHkuQ29tbWVudExpc3QodGhhdC5kYXRhLmlkLDAsdGhhdC5kYXRhLm9mZnNldCx0aGF0LmRhdGEubGltaXQsMSxudWxsLHN1Y2Nlc3NGYXkpXG4gICAgICBmdW5jdGlvbiBzdWNjZXNzRmF5KHJlcywgc291cmNlT2JqKXtcbiAgICAgICAgLy8gIGlmIChyZXMuZXJybm8gPT09IDApIHtcbiAgICAgICAgICAgIHRoYXQuc2V0RGF0YSh7XG4gICAgICAgICAgICAgIGNvbW1lbnRMaXN0OiByZXMuZGF0YS5kYXRhLFxuICAgICAgICAgICAgICBjb21tZW50Q291bnQ6IHJlcy5kYXRhLmNvdW50XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgLy8gfVxuICAgICAgfVxuICB9LFxuICBwb3N0Q29tbWVudCgpIHtcbiAgICBpZiAoIWxvZ2luRmxhZykge1xuICAgICAgd3gubmF2aWdhdGVUbyh7IHVybDogXCIvcGFnZXMvYXV0aC9sb2dpbi9sb2dpblwiIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybDogJy9wYWdlcy90b3BpY0NvbW1lbnRQb3N0L3RvcGljQ29tbWVudFBvc3Q/dmFsdWVJZD0nICsgdGhpcy5kYXRhLmlkICsgJyZ0eXBlPTEnLFxuICAgICAgICAgfSlcbiAgICB9XG4gIH0sXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAvLyDpobXpnaLmmL7npLpcbiAgICB0aGlzLmdldENvbW1lbnRMaXN0KCk7XG4gIH0sXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuICAgIC8vIOmhtemdoumakOiXj1xuXG4gIH0sXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8g6aG16Z2i5YWz6ZetXG5cbiAgfVxufSJdfQ==