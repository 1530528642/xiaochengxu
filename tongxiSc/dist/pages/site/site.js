"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var apis = require("../../utils/api.js");
var dates = require("../../utils/dateutils.js");
exports.default = Page({
  paging: function paging() {
    var _this = this;
    this.setData({ condition: 1 });
    var estate = wx.getStorageSync("uid");
    apis.sitelists({ estateId: estate, offset: _this.data.offset, limit: _this.data.limit }, 1, successFa, null, null);
    function successFa(data, sourceObj) {
      var offsets = _this.data.offset + _this.data.limit;
      var datas;
      for (var i = 0; i < data.data.length; i++) {
        datas = new Date(data.data[i].createTime);
        data.data[i].createTime = dates.getDate(data.data[i].createTime);
        _this.data.washnumber.push(data.data[i]);
      }
      _this.setData({ washnumber: _this.data.washnumber, offset: offsets });
      var lengths = data.data.length;
      if (lengths < _this.data.limit) {
        _this.setData({ condition: 0 });
      } else {
        _this.setData({ condition: 2 });
      }
      // console.log(_this.data.condition)
    }
  },
  onLoad: function onLoad(option) {
    this.paging();
  },
  data: {
    washnumber: [],
    offset: 0,
    limit: 10,
    condition: 2
  },
  onPullDownRefresh: function onPullDownRefresh() {
    this.setData({ washnumber: [], offset: 0 });
    this.paging();
    wx.stopPullDownRefresh();
  },
  onReachBottom: function onReachBottom() {
    this.paging();
  },
  tipUrl: function tipUrl(e) {
    var uid = e.currentTarget.dataset.uid;
    wx.navigateTo({
      url: "../washtwo/washtwo?siteId=" + uid
    });
  }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUud3hwIl0sIm5hbWVzIjpbImFwaXMiLCJyZXF1aXJlIiwiZGF0ZXMiLCJwYWdpbmciLCJfdGhpcyIsInNldERhdGEiLCJjb25kaXRpb24iLCJlc3RhdGUiLCJ3eCIsImdldFN0b3JhZ2VTeW5jIiwic2l0ZWxpc3RzIiwiZXN0YXRlSWQiLCJvZmZzZXQiLCJkYXRhIiwibGltaXQiLCJzdWNjZXNzRmEiLCJzb3VyY2VPYmoiLCJvZmZzZXRzIiwiZGF0YXMiLCJpIiwibGVuZ3RoIiwiRGF0ZSIsImNyZWF0ZVRpbWUiLCJnZXREYXRlIiwid2FzaG51bWJlciIsInB1c2giLCJsZW5ndGhzIiwib25Mb2FkIiwib3B0aW9uIiwib25QdWxsRG93blJlZnJlc2giLCJzdG9wUHVsbERvd25SZWZyZXNoIiwib25SZWFjaEJvdHRvbSIsInRpcFVybCIsImUiLCJ1aWQiLCJjdXJyZW50VGFyZ2V0IiwiZGF0YXNldCIsIm5hdmlnYXRlVG8iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsT0FBUUMsUUFBUSxvQkFBUixDQUFaO0FBQ0EsSUFBSUMsUUFBU0QsUUFBUSwwQkFBUixDQUFiOztBQVNHRSxVQUFPLGtCQUFVO0FBQ2QsUUFBTUMsUUFBUSxJQUFkO0FBQ0EsU0FBS0MsT0FBTCxDQUFhLEVBQUNDLFdBQVUsQ0FBWCxFQUFiO0FBQ0EsUUFBSUMsU0FBU0MsR0FBR0MsY0FBSCxDQUFrQixLQUFsQixDQUFiO0FBQ0ZULFNBQUtVLFNBQUwsQ0FBZSxFQUFDQyxVQUFTSixNQUFWLEVBQWlCSyxRQUFPUixNQUFNUyxJQUFOLENBQVdELE1BQW5DLEVBQTBDRSxPQUFNVixNQUFNUyxJQUFOLENBQVdDLEtBQTNELEVBQWYsRUFBaUYsQ0FBakYsRUFBbUZDLFNBQW5GLEVBQThGLElBQTlGLEVBQW9HLElBQXBHO0FBQ0EsYUFBU0EsU0FBVCxDQUFtQkYsSUFBbkIsRUFBeUJHLFNBQXpCLEVBQW1DO0FBQzdCLFVBQU1DLFVBQVViLE1BQU1TLElBQU4sQ0FBV0QsTUFBWCxHQUFrQlIsTUFBTVMsSUFBTixDQUFXQyxLQUE3QztBQUNBLFVBQUlJLEtBQUo7QUFDQyxXQUFJLElBQUlDLElBQUUsQ0FBVixFQUFZQSxJQUFFTixLQUFLQSxJQUFMLENBQVVPLE1BQXhCLEVBQStCRCxHQUEvQixFQUFtQztBQUNoQ0QsZ0JBQVEsSUFBSUcsSUFBSixDQUFTUixLQUFLQSxJQUFMLENBQVVNLENBQVYsRUFBYUcsVUFBdEIsQ0FBUjtBQUNBVCxhQUFLQSxJQUFMLENBQVVNLENBQVYsRUFBYUcsVUFBYixHQUF3QnBCLE1BQU1xQixPQUFOLENBQWNWLEtBQUtBLElBQUwsQ0FBVU0sQ0FBVixFQUFhRyxVQUEzQixDQUF4QjtBQUNEbEIsY0FBTVMsSUFBTixDQUFXVyxVQUFYLENBQXNCQyxJQUF0QixDQUEyQlosS0FBS0EsSUFBTCxDQUFVTSxDQUFWLENBQTNCO0FBQ0Q7QUFDRmYsWUFBTUMsT0FBTixDQUFjLEVBQUNtQixZQUFXcEIsTUFBTVMsSUFBTixDQUFXVyxVQUF2QixFQUFrQ1osUUFBT0ssT0FBekMsRUFBZDtBQUNBLFVBQUlTLFVBQVViLEtBQUtBLElBQUwsQ0FBVU8sTUFBeEI7QUFDQSxVQUFHTSxVQUFVdEIsTUFBTVMsSUFBTixDQUFXQyxLQUF4QixFQUE4QjtBQUM1QlYsY0FBTUMsT0FBTixDQUFjLEVBQUNDLFdBQVUsQ0FBWCxFQUFkO0FBQ0QsT0FGRCxNQUVLO0FBQ0hGLGNBQU1DLE9BQU4sQ0FBYyxFQUFDQyxXQUFVLENBQVgsRUFBZDtBQUNEO0FBQ0Q7QUFDQTtBQUNOLEc7QUFDRHFCLFVBQU8sZ0JBQVNDLE1BQVQsRUFBZ0I7QUFDdEIsU0FBS3pCLE1BQUw7QUFDQyxHO0FBQ0hVLFFBQU07QUFDSFcsZ0JBQVcsRUFEUjtBQUVIWixZQUFPLENBRko7QUFHSEUsV0FBTSxFQUhIO0FBSUhSLGVBQVU7QUFKUCxHO0FBTU51QixxQkFBa0IsNkJBQVU7QUFDekIsU0FBS3hCLE9BQUwsQ0FBYSxFQUFDbUIsWUFBVyxFQUFaLEVBQWVaLFFBQU8sQ0FBdEIsRUFBYjtBQUNBLFNBQUtULE1BQUw7QUFDQUssT0FBR3NCLG1CQUFIO0FBQ0EsRztBQUNIQyxpQkFBZSx5QkFBWTtBQUN2QixTQUFLNUIsTUFBTDtBQUNILEc7QUFDRDZCLFVBQU8sZ0JBQVNDLENBQVQsRUFBVztBQUNoQixRQUFJQyxNQUFNRCxFQUFFRSxhQUFGLENBQWdCQyxPQUFoQixDQUF3QkYsR0FBbEM7QUFDQTFCLE9BQUc2QixVQUFILENBQWM7QUFDRUMsV0FBSSwrQkFBNkJKO0FBRG5DLEtBQWQ7QUFHRCIsImZpbGUiOiJzaXRlLnd4cCIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcGlzID0gIHJlcXVpcmUoXCIuLi8uLi91dGlscy9hcGkuanNcIilcbnZhciBkYXRlcyA9ICByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZGF0ZXV0aWxzLmpzXCIpXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNvbmZpZzoge1xuICAgIG5hdmlnYXRpb25CYXJUaXRsZVRleHQ6ICfmiJHnmoTnq5nngrknLFxuICAgIHVzaW5nQ29tcG9uZW50czoge1xuICAgICAgICd3eGMtbGlzdCc6ICdAbWludWkvd3hjLWxpc3QnLFxuICAgICAgICd3eGMtbG9hZG1vcmUnOiAnQG1pbnVpL3d4Yy1sb2FkbW9yZSdcbiAgICB9XG4gIH0sXG4gICBwYWdpbmc6ZnVuY3Rpb24oKXtcbiAgICAgIGNvbnN0IF90aGlzID0gdGhpcztcbiAgICAgIHRoaXMuc2V0RGF0YSh7Y29uZGl0aW9uOjF9KVxuICAgICAgdmFyIGVzdGF0ZSA9IHd4LmdldFN0b3JhZ2VTeW5jKFwidWlkXCIpXG4gICAgYXBpcy5zaXRlbGlzdHMoe2VzdGF0ZUlkOmVzdGF0ZSxvZmZzZXQ6X3RoaXMuZGF0YS5vZmZzZXQsbGltaXQ6X3RoaXMuZGF0YS5saW1pdH0sMSxzdWNjZXNzRmEsIG51bGwsIG51bGwpO1xuICAgIGZ1bmN0aW9uIHN1Y2Nlc3NGYShkYXRhLCBzb3VyY2VPYmope1xuICAgICAgICAgIGNvbnN0IG9mZnNldHMgPSBfdGhpcy5kYXRhLm9mZnNldCtfdGhpcy5kYXRhLmxpbWl0O1xuICAgICAgICAgIHZhciBkYXRhcztcbiAgICAgICAgICAgZm9yKHZhciBpPTA7aTxkYXRhLmRhdGEubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICAgIGRhdGFzID0gbmV3IERhdGUoZGF0YS5kYXRhW2ldLmNyZWF0ZVRpbWUpO1xuICAgICAgICAgICAgICBkYXRhLmRhdGFbaV0uY3JlYXRlVGltZT1kYXRlcy5nZXREYXRlKGRhdGEuZGF0YVtpXS5jcmVhdGVUaW1lKTtcbiAgICAgICAgICAgICBfdGhpcy5kYXRhLndhc2hudW1iZXIucHVzaChkYXRhLmRhdGFbaV0pXG4gICAgICAgICAgIH1cbiAgICAgICAgICBfdGhpcy5zZXREYXRhKHt3YXNobnVtYmVyOl90aGlzLmRhdGEud2FzaG51bWJlcixvZmZzZXQ6b2Zmc2V0c30pXG4gICAgICAgICAgdmFyIGxlbmd0aHMgPSBkYXRhLmRhdGEubGVuZ3RoO1xuICAgICAgICAgIGlmKGxlbmd0aHMgPCBfdGhpcy5kYXRhLmxpbWl0KXtcbiAgICAgICAgICAgIF90aGlzLnNldERhdGEoe2NvbmRpdGlvbjowfSlcbiAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIF90aGlzLnNldERhdGEoe2NvbmRpdGlvbjoyfSlcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coX3RoaXMuZGF0YS5jb25kaXRpb24pXG4gICAgICAgICB9XG4gICB9LFxuICAgb25Mb2FkOmZ1bmN0aW9uKG9wdGlvbil7XG4gICAgdGhpcy5wYWdpbmcoKVxuICAgIH0sXG4gIGRhdGE6IHtcbiAgICAgd2FzaG51bWJlcjpbXSxcbiAgICAgb2Zmc2V0OjAsXG4gICAgIGxpbWl0OjEwLFxuICAgICBjb25kaXRpb246MlxuICAgfSxcbiAgb25QdWxsRG93blJlZnJlc2g6ZnVuY3Rpb24oKXtcbiAgICAgdGhpcy5zZXREYXRhKHt3YXNobnVtYmVyOltdLG9mZnNldDowfSlcbiAgICAgdGhpcy5wYWdpbmcoKVxuICAgICB3eC5zdG9wUHVsbERvd25SZWZyZXNoKClcbiAgICB9LFxuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLnBhZ2luZygpXG4gIH0sXG4gIHRpcFVybDpmdW5jdGlvbihlKXtcbiAgICB2YXIgdWlkID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQudWlkO1xuICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICAgICAgICB1cmw6XCIuLi93YXNodHdvL3dhc2h0d28/c2l0ZUlkPVwiK3VpZFxuICAgICAgICAgICAgICAgIH0pXG4gIH1cbiAgXG59Il19