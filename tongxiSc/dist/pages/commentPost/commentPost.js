"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var daaty = require("../../utils/api2.js");
var tip = require("../../utils/tip.js");
var navigator = require("../../utils/navigator.js");
var app = getApp();
exports.default = Page({
  data: {
    orderId: 0,
    type: 0,
    valueId: 0,
    orderGoods: {},
    content: '',
    stars: [0, 1, 2, 3, 4],
    star: 5,
    starText: '十分满意',
    hasPicture: false,
    picUrls: [],
    files: []
  },
  chooseImage: function chooseImage(e) {
    if (this.data.files.length >= 5) {
      tip.showToast('只能上传五张图片');
      return false;
    }

    var that = this;
    wx.chooseImage({
      count: 5,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success: function success(res) {
        that.setData({
          files: that.data.files.concat(res.tempFilePaths)
        });
      }
    });
  },
  previewImage: function previewImage(e) {
    wx.previewImage({
      current: e.currentTarget.id, // 当前显示图片的http链接
      urls: this.data.files // 需要预览的图片http链接列表
    });
  },
  selectRater: function selectRater(e) {
    var star = e.currentTarget.dataset.star + 1;
    var starText;
    if (star == 1) {
      starText = '很差';
    } else if (star == 2) {
      starText = '不太满意';
    } else if (star == 3) {
      starText = '满意';
    } else if (star == 4) {
      starText = '比较满意';
    } else {
      starText = '十分满意';
    }
    this.setData({
      star: star,
      starText: starText
    });
  },
  onLoad: function onLoad(options) {
    var that = this;
    that.setData({
      orderId: options.orderId,
      type: options.type,
      valueId: options.valueId
    });
    this.getOrderComment();
  },
  getOrderComment: function getOrderComment() {
    var that = this;
    daaty.OrderComment(that.data.orderId, that.data.valueId, null, successFay);
    function successFay(res, sourceObj) {
      that.setData({
        orderGoods: res.data
      });
    }
  },
  onClose: function onClose() {
    wx.navigateBack();
  },
  onPost: function onPost() {
    var that = this;
    var hasPicture = void 0;
    var state = 0;
    var newurl = [];
    if (!this.data.content) {
      tip.showToast('请填写评论');
      return false;
    }

    if (that.data.files.length > 0) {
      var successFay = function successFay(res, sourceObj) {
        state++;
        var numarr = res.data.replace("\"", "").replace("\"", "");
        newurl.push(numarr);
        if (state == that.data.files.length) {
          pyim(newurl);
        }
      };

      hasPicture = 1;
      daaty.uploadFile(that.data.files, 0, 0, 0, that.data.files.length, that.data.sn, that.data.userid, 13, successFay);
    } else {
      hasPicture = 0;
      pyim();
    }
    function pyim(dara) {
      if (dara == undefined) {
        dara = '';
      }
      daaty.CommentPost(that.data.userid, 0, that.data.valueId, that.data.content, that.data.star, hasPicture, dara, null, successFay);
      function successFay(res, sourceObj) {
        wx.showToast({
          title: '评论成功',
          complete: function complete() {
            setTimeout(function () {
              wx.navigateBack();
            }, 1500);
          }
        });
      }
    }
  },
  bindInputValue: function bindInputValue(event) {

    var value = event.detail.value;

    //判断是否超过140个字符
    if (value && value.length > 140) {
      return false;
    }

    this.setData({
      content: event.detail.value
    });
  },

  onReady: function onReady() {},
  onShow: function onShow() {
    // 页面显示

  },
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭

  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRQb3N0Lnd4cCJdLCJuYW1lcyI6WyJkYWF0eSIsInJlcXVpcmUiLCJ0aXAiLCJuYXZpZ2F0b3IiLCJhcHAiLCJnZXRBcHAiLCJkYXRhIiwib3JkZXJJZCIsInR5cGUiLCJ2YWx1ZUlkIiwib3JkZXJHb29kcyIsImNvbnRlbnQiLCJzdGFycyIsInN0YXIiLCJzdGFyVGV4dCIsImhhc1BpY3R1cmUiLCJwaWNVcmxzIiwiZmlsZXMiLCJjaG9vc2VJbWFnZSIsImUiLCJsZW5ndGgiLCJzaG93VG9hc3QiLCJ0aGF0Iiwid3giLCJjb3VudCIsInNpemVUeXBlIiwic291cmNlVHlwZSIsInN1Y2Nlc3MiLCJyZXMiLCJzZXREYXRhIiwiY29uY2F0IiwidGVtcEZpbGVQYXRocyIsInByZXZpZXdJbWFnZSIsImN1cnJlbnQiLCJjdXJyZW50VGFyZ2V0IiwiaWQiLCJ1cmxzIiwic2VsZWN0UmF0ZXIiLCJkYXRhc2V0Iiwib25Mb2FkIiwib3B0aW9ucyIsImdldE9yZGVyQ29tbWVudCIsIk9yZGVyQ29tbWVudCIsInN1Y2Nlc3NGYXkiLCJzb3VyY2VPYmoiLCJvbkNsb3NlIiwibmF2aWdhdGVCYWNrIiwib25Qb3N0Iiwic3RhdGUiLCJuZXd1cmwiLCJudW1hcnIiLCJyZXBsYWNlIiwicHVzaCIsInB5aW0iLCJ1cGxvYWRGaWxlIiwic24iLCJ1c2VyaWQiLCJkYXJhIiwidW5kZWZpbmVkIiwiQ29tbWVudFBvc3QiLCJ0aXRsZSIsImNvbXBsZXRlIiwic2V0VGltZW91dCIsImJpbmRJbnB1dFZhbHVlIiwiZXZlbnQiLCJ2YWx1ZSIsImRldGFpbCIsIm9uUmVhZHkiLCJvblNob3ciLCJvbkhpZGUiLCJvblVubG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFJQSxRQUFTQyxRQUFRLHFCQUFSLENBQWI7QUFDQSxJQUFJQyxNQUFNRCxRQUFRLG9CQUFSLENBQVY7QUFDQSxJQUFJRSxZQUFhRixRQUFRLDBCQUFSLENBQWpCO0FBQ0EsSUFBSUcsTUFBTUMsUUFB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QUtoQixJQUFMLENBQVVrRCxNQUE1QixFQUFtQyxDQUFuQyxFQUFxQ2xDLEtBQUtoQixJQUFMLENBQVVHLE9BQS9DLEVBQXVEYSxLQUFLaEIsSUFBTCxDQUFVSyxPQUFqRSxFQUF5RVcsS0FBS2hCLElBQUwsQ0FBVU8sSUFBbkYsRUFBd0ZFLFVBQXhGLEVBQW1HMEMsSUFBbkcsRUFBd0csSUFBeEcsRUFBNkdkLFVBQTdHO0FBQ1EsZUFBU0EsVUFBVCxDQUFvQmYsR0FBcEIsRUFBd0JnQixTQUF4QixFQUFrQztBQUM5QnJCLFdBQUdGLFNBQUgsQ0FBYTtBQUNidUMsaUJBQU8sTUFETTtBQUViQyxvQkFBVSxvQkFBWTtBQUNyQkMsdUJBQVcsWUFBVTtBQUNoQnZDLGlCQUFHdUIsWUFBSDtBQUNDLGFBRk4sRUFFTyxJQUZQO0FBR0U7QUFOVSxTQUFiO0FBUVI7QUFDTjtBQUNELEc7QUFDRGlCLGdCLDBCQUFlQyxLLEVBQU87O0FBRXBCLFFBQUlDLFFBQVFELE1BQU1FLE1BQU4sQ0FBYUQsS0FBekI7O0FBRUE7QUFDQSxRQUFJQSxTQUFTQSxNQUFNN0MsTUFBTixHQUFlLEdBQTVCLEVBQWlDO0FBQy9CLGFBQU8sS0FBUDtBQUNEOztBQUVELFNBQUtTLE9BQUwsQ0FBYTtBQUNYbEIsZUFBU3FELE1BQU1FLE1BQU4sQ0FBYUQ7QUFEWCxLQUFiO0FBR0QsRzs7QUFDREUsV0FBUyxtQkFBWSxDQUVwQixDO0FBQ0RDLFVBQVEsa0JBQVk7QUFDbEI7O0FBRUQsRztBQUNEQyxVQUFRLGtCQUFZO0FBQ2xCOztBQUVELEc7QUFDREMsWUFBVSxvQkFBWTtBQUNwQjs7QUFFRCIsImZpbGUiOiJjb21tZW50UG9zdC53eHAiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGFhdHkgPSAgcmVxdWlyZShcIi4uLy4uL3V0aWxzL2FwaTIuanNcIilcbnZhciB0aXAgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvdGlwLmpzXCIpXG52YXIgbmF2aWdhdG9yID0gIHJlcXVpcmUoXCIuLi8uLi91dGlscy9uYXZpZ2F0b3IuanNcIilcbnZhciBhcHAgPSBnZXRBcHAoKVxuZXhwb3J0IGRlZmF1bHQge1xuICBjb25maWc6IHtcbiAgICBuYXZpZ2F0aW9uQmFyVGl0bGVUZXh0OiAn6K+E5Lu35ZWG5ZOBJyxcbiAgICB1c2luZ0NvbXBvbmVudHM6IHt9XG4gIH0sXG4gZGF0YToge1xuICAgIG9yZGVySWQ6IDAsXG4gICAgdHlwZTogMCxcbiAgICB2YWx1ZUlkOiAwLFxuICAgIG9yZGVyR29vZHM6IHt9LFxuICAgIGNvbnRlbnQ6ICcnLFxuICAgIHN0YXJzOiBbMCwgMSwgMiwgMywgNF0sXG4gICAgc3RhcjogNSxcbiAgICBzdGFyVGV4dDogJ+WNgeWIhua7oeaEjycsXG4gICAgaGFzUGljdHVyZTogZmFsc2UsXG4gICAgcGljVXJsczogW10sXG4gICAgZmlsZXM6IFtdXG4gIH0sXG4gIGNob29zZUltYWdlOiBmdW5jdGlvbiAoZSkge1xuICAgIGlmICh0aGlzLmRhdGEuZmlsZXMubGVuZ3RoID49IDUpIHtcbiAgICAgIHRpcC5zaG93VG9hc3QoJ+WPquiDveS4iuS8oOS6lOW8oOWbvueJhycpXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHd4LmNob29zZUltYWdlKHtcbiAgICAgIGNvdW50OiA1LFxuICAgICAgc2l6ZVR5cGU6IFsnb3JpZ2luYWwnLCAnY29tcHJlc3NlZCddLFxuICAgICAgc291cmNlVHlwZTogWydhbGJ1bScsICdjYW1lcmEnXSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgdGhhdC5zZXREYXRhKHtcbiAgICAgICAgICBmaWxlczogdGhhdC5kYXRhLmZpbGVzLmNvbmNhdChyZXMudGVtcEZpbGVQYXRocylcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSlcbiAgfSxcbiAgcHJldmlld0ltYWdlOiBmdW5jdGlvbiAoZSkge1xuICAgIHd4LnByZXZpZXdJbWFnZSh7XG4gICAgICBjdXJyZW50OiBlLmN1cnJlbnRUYXJnZXQuaWQsIC8vIOW9k+WJjeaYvuekuuWbvueJh+eahGh0dHDpk77mjqVcbiAgICAgIHVybHM6IHRoaXMuZGF0YS5maWxlcyAvLyDpnIDopoHpooTop4jnmoTlm77niYdodHRw6ZO+5o6l5YiX6KGoXG4gICAgfSlcbiAgfSxcbiAgc2VsZWN0UmF0ZXI6IGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIHN0YXIgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5zdGFyICsgMTtcbiAgICB2YXIgc3RhclRleHQ7XG4gICAgaWYgKHN0YXIgPT0gMSkge1xuICAgICAgc3RhclRleHQgPSAn5b6I5beuJztcbiAgICB9XG4gICAgZWxzZSBpZiAoc3RhciA9PSAyKSB7XG4gICAgICBzdGFyVGV4dCA9ICfkuI3lpKrmu6HmhI8nO1xuICAgIH1cbiAgICBlbHNlIGlmIChzdGFyID09IDMpIHtcbiAgICAgIHN0YXJUZXh0ID0gJ+a7oeaEjyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHN0YXIgPT0gNCkge1xuICAgICAgc3RhclRleHQgPSAn5q+U6L6D5ruh5oSPJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBzdGFyVGV4dCA9ICfljYHliIbmu6HmhI8nXG4gICAgfVxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBzdGFyOiBzdGFyLFxuICAgICAgc3RhclRleHQ6IHN0YXJUZXh0XG4gICAgfSlcblxuICB9LFxuICBvbkxvYWQ6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHRoYXQuc2V0RGF0YSh7XG4gICAgICBvcmRlcklkOiBvcHRpb25zLm9yZGVySWQsXG4gICAgICB0eXBlOiBvcHRpb25zLnR5cGUsXG4gICAgICB2YWx1ZUlkOiBvcHRpb25zLnZhbHVlSWRcbiAgICB9KTtcbiAgICB0aGlzLmdldE9yZGVyQ29tbWVudCgpO1xuICB9LFxuICBnZXRPcmRlckNvbW1lbnQ6IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgZGFhdHkuT3JkZXJDb21tZW50KHRoYXQuZGF0YS5vcmRlcklkLHRoYXQuZGF0YS52YWx1ZUlkLG51bGwsc3VjY2Vzc0ZheSlcbiAgICAgIGZ1bmN0aW9uIHN1Y2Nlc3NGYXkocmVzLCBzb3VyY2VPYmope1xuICAgICAgICB0aGF0LnNldERhdGEoe1xuICAgICAgICAgIG9yZGVyR29vZHM6IHJlcy5kYXRhLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgfSxcbiAgb25DbG9zZTogZnVuY3Rpb24gKCkge1xuICAgIHd4Lm5hdmlnYXRlQmFjaygpO1xuICB9LFxuICBvblBvc3Q6IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgbGV0IGhhc1BpY3R1cmU7XG4gICAgbGV0IHN0YXRlID0gMDtcbiAgICBsZXQgbmV3dXJsID0gW11cbiAgICBpZiAoIXRoaXMuZGF0YS5jb250ZW50KSB7XG4gICAgICB0aXAuc2hvd1RvYXN0KCfor7floavlhpnor4TorronKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBcbiAgICBpZih0aGF0LmRhdGEuZmlsZXMubGVuZ3RoID4gMCl7XG4gICAgICAgIGhhc1BpY3R1cmUgPSAxXG4gICAgICAgIGRhYXR5LnVwbG9hZEZpbGUodGhhdC5kYXRhLmZpbGVzLDAsMCwwLHRoYXQuZGF0YS5maWxlcy5sZW5ndGgsdGhhdC5kYXRhLnNuLHRoYXQuZGF0YS51c2VyaWQsMTMsc3VjY2Vzc0ZheSlcbiAgICAgICAgICAgZnVuY3Rpb24gc3VjY2Vzc0ZheShyZXMsIHNvdXJjZU9iail7XG4gICAgICAgICAgICAgc3RhdGUrK1xuICAgICAgICAgICAgIHZhciBudW1hcnIgPSByZXMuZGF0YS5yZXBsYWNlKFwiXFxcIlwiLFwiXCIpLnJlcGxhY2UoXCJcXFwiXCIsXCJcIik7XG4gICAgICAgICAgICAgIG5ld3VybC5wdXNoKG51bWFycilcbiAgICAgICAgICAgICAgIGlmKHN0YXRlID09IHRoYXQuZGF0YS5maWxlcy5sZW5ndGgpe1xuICAgICAgICAgICAgICAgICAgICBweWltKG5ld3VybClcbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1lbHNle1xuICAgICAgICBoYXNQaWN0dXJlID0gMFxuICAgICAgICBweWltKClcbiAgICB9XG4gICBmdW5jdGlvbiBweWltKGRhcmEpe1xuICAgICBpZihkYXJhID09IHVuZGVmaW5lZCl7XG4gICAgICAgIGRhcmEgID0gJydcbiAgICAgfVxuICAgICAgZGFhdHkuQ29tbWVudFBvc3QodGhhdC5kYXRhLnVzZXJpZCwwLHRoYXQuZGF0YS52YWx1ZUlkLHRoYXQuZGF0YS5jb250ZW50LHRoYXQuZGF0YS5zdGFyLGhhc1BpY3R1cmUsZGFyYSxudWxsLHN1Y2Nlc3NGYXkpXG4gICAgICAgICAgICAgIGZ1bmN0aW9uIHN1Y2Nlc3NGYXkocmVzLHNvdXJjZU9iail7XG4gICAgICAgICAgICAgICAgICB3eC5zaG93VG9hc3Qoe1xuICAgICAgICAgICAgICAgICAgdGl0bGU6ICfor4TorrrmiJDlip8nLFxuICAgICAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sMTUwMClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgfSlcbiAgICAgICAgIH1cbiAgIH1cbiAgfSxcbiAgYmluZElucHV0VmFsdWUoZXZlbnQpIHtcblxuICAgIGxldCB2YWx1ZSA9IGV2ZW50LmRldGFpbC52YWx1ZTtcblxuICAgIC8v5Yik5pat5piv5ZCm6LaF6L+HMTQw5Liq5a2X56ymXG4gICAgaWYgKHZhbHVlICYmIHZhbHVlLmxlbmd0aCA+IDE0MCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBjb250ZW50OiBldmVudC5kZXRhaWwudmFsdWUsXG4gICAgfSlcbiAgfSxcbiAgb25SZWFkeTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG4gIG9uU2hvdzogZnVuY3Rpb24gKCkge1xuICAgIC8vIOmhtemdouaYvuekulxuXG4gIH0sXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkge1xuICAgIC8vIOmhtemdoumakOiXj1xuXG4gIH0sXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgLy8g6aG16Z2i5YWz6ZetXG5cbiAgfVxufSJdfQ==