"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var daaty = require("../../utils/api2.js");
var app = getApp();
var tip = require("../../utils/tip.js");
var cache = require("../../utils/cache.js");
exports.default = Page({
  data: {
    valueId: 0,
    topic: {},
    content: '',
    stars: [0, 1, 2, 3, 4],
    star: 5,
    starText: '十分满意',
    hasPicture: false,
    picUrls: [],
    files: []
  },
  chooseImage: function chooseImage(e) {
    if (this.data.files.length >= 5) {
      tip.showToast('只能上传五张图片');
      return false;
    }

    var that = this;
    wx.chooseImage({
      count: 5,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success: function success(res) {
        that.setData({
          files: that.data.files.concat(res.tempFilePaths)
        });
      }
    });
  },
  previewImage: function previewImage(e) {
    wx.previewImage({
      current: e.currentTarget.id, // 当前显示图片的http链接
      urls: this.data.files // 需要预览的图片http链接列表
    });
  },
  selectRater: function selectRater(e) {
    var star = e.currentTarget.dataset.star + 1;
    var starText;
    if (star == 1) {
      starText = '很差';
    } else if (star == 2) {
      starText = '不太满意';
    } else if (star == 3) {
      starText = '满意';
    } else if (star == 4) {
      starText = '比较满意';
    } else {
      starText = '十分满意';
    }
    this.setData({
      star: star,
      starText: starText
    });
  },
  onLoad: function onLoad(options) {
    var thisty = this;
    var userid = app.globalData.user.userId;
    thisty.setData({
      valueId: options.valueId
    });
    console.log(options);
    this.setData({ userid: userid });
    daaty.getProductSN(userid, 3, null, successFa);
    function successFa(data, sourceObj) {
      thisty.setData({ sn: data.data.sn });
    }
    if (parseInt(options.typeId) !== 1) {
      return;
    }

    var that = this;
    this.getTopic();
  },
  getTopic: function getTopic() {
    var that = this;
    daaty.TopicDetail(that.data.valueId, null, successFay);
    function successFay(res, sourceObj) {
      that.setData({
        topic: res.data
      });
    }
  },
  onClose: function onClose() {
    wx.navigateBack();
  },
  onPost: function onPost() {
    var that = this;
    var hasPicture = void 0;
    var state = 0;
    var newurl = [];
    if (!this.data.content) {
      tip.showToast('请填写评论');
      return false;
    }

    if (that.data.files.length > 0) {
      var successFay = function successFay(res, sourceObj) {
        state++;
        var numarr = res.data.replace("\"", "").replace("\"", "");
        newurl.push(numarr);
        if (state == that.data.files.length) {
          pyim(newurl);
        }
      };

      hasPicture = 1;
      daaty.uploadFile(that.data.files, 0, 0, 0, that.data.files.length, that.data.sn, that.data.userid, 13, successFay);
    } else {
      hasPicture = 0;
      pyim();
    }
    function pyim(dara) {
      if (dara == undefined) {
        dara = '';
      }
      daaty.CommentPost(that.data.userid, 1, that.data.valueId, that.data.content, that.data.star, hasPicture, dara, null, successFay);
      function successFay(res, sourceObj) {
        wx.showToast({
          title: '评论成功',
          complete: function complete() {
            setTimeout(function () {
              wx.navigateBack();
            }, 1500);
          }
        });
      }
    }
  },
  bindInputValue: function bindInputValue(event) {

    var value = event.detail.value;

    //判断是否超过140个字符
    if (value && value.length > 140) {
      return false;
    }

    this.setData({
      content: event.detail.value
    });
  },

  onReady: function onReady() {},
  onShow: function onShow() {
    // 页面显示

  },
  onHide: function onHide() {
    // 页面隐藏

  },
  onUnload: function onUnload() {
    // 页面关闭

  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,