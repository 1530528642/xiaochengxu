"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var tip = require("./utils/tip.js");
var api = require("./utils/api2.js");
var cache = require("./utils/cache.js");
var navigator = require("./utils/navigator.js");
exports.default = App({
  onLaunch: function onLaunch() {
    // console.log('App Launch')
    var that = this;
    //that.checkLoginStatus();
    that.globalData.imgUrl = api.baseImgUrl;
  },
  onShow: function onShow() {
    // console.log('App Show')
  },
  onHide: function onHide() {
    // console.log('App Hide')
  },
  loading: function loading() {
    wx.showLoading({
      title: '数据加载中...'
    });
  },
  hideLing: function hideLing() {
    setTimeout(function () {
      wx.hideLoading();
    }, 100);
  },
  globalData: {
    appgolble: 4654,
    loading: true,
    token: '',
    openId: '',
    user: null,
    loginFlag: false,
    imgUrl: '',
    appId: 'wx69de4292a3b6b8b5',
    mygropuList: [],
    bchage: true,
    newDataObj: {
      state: false,
      steaindex: ''
    }
  },
  // 检查本地 storage 中是否有登录态标识
  checkLoginStatus: function checkLoginStatus() {
    //wx.clearStorage()
    //tip.showModal('警告','检查本地 storage 中是否有登录态标识');
    //tip.showToast('检查本地 storage 中是否有登录态标识');
    var that = this;
    var loginFlag1 = cache.getSync('loginFlag');
    var loginFlag2 = that.globalData.loginFlag;
    console.log(loginFlag1, "loginFlag1");
    console.log(loginFlag2, "loginFlag2");
    if (!loginFlag2 && loginFlag1) {
      //已登录过
      var userStorageInfo = cache.getSync('user');
      if (userStorageInfo) {
        that.globalData.openId = userStorageInfo.xcxOpenId;
        that.globalData.loginFlag = true;
        that.globalData.user = userStorageInfo;
        console.log(that.globalData.user, '已登录');
      }
      // 检查 session_key 是否过期
      // wx.checkSession({
      //     // session_key 有效(为过期)
      //     success: function () {
      //         // 直接从Storage中获取用户信息
      //         let userStorageInfo = cache.getSync('user');
      //         cache.setSync('loginFlag',true);
      //         if (userStorageInfo) {
      //             that.globalData.openId=userStorageInfo.xcxOpenId;
      //             that.globalData.loginFlag=true;
      //             that.globalData.user = userStorageInfo;
      //             console.log(that.globalData.user,'已登录')   
      //         } else {
      //             that.showInfo('缓存信息缺失');
      //             console.error('登录成功后将用户信息存在Storage的userStorageInfo字段中，该字段丢失');
      //         }

      //     },
      //     // session_key 过期
      //     fail: function () {
      //         // session_key过期
      //     }
      // });
    } else if (!loginFlag1) {
      // console.log('未登录')
      that.hideLing();
      tip.showModal('警告', '请登录', function () {
        //console.log(2331)
        navigator.switchTab("../my/my", null);
      });
      // that.dologin();
    }
  },
  // 检查用户信息授权设置
  checkUserInfoPermission: function checkUserInfoPermission() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

    console.log("ok");
    wx.getSetting({
      success: function success(res) {
        if (!res.authSetting['scope.userInfo']) {
          wx.openSetting({
            success: function success(authSetting) {
              console.log(authSetting);
              callback();
            }
          });
        }
      },
      fail: function fail(error) {
        console.log(error);
      }
    });
  },
  dologin: function dologin() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
    var user = arguments[1];

    var that = this;
    console.log('登录....');
    //console.log(callback)
    if (user) {
      //console.log(5466363)
      wx.login({
        success: function success(loginRes) {
          if (loginRes.code) {
            console.log('登录....', loginRes.code);
            wx.request({
              url: api.getUser,
              header: { 'Content-Type': 'application/x-www-form-urlencoded', devType: 1, appId: that.globalData.appId },
              data: {
                code: loginRes.code,
                nickName: user.nickName,
                avatarUrl: user.avatarUrl,
                gender: user.gender,
                city: user.city,
                province: user.province,
                country: user.country,
                language: user.language
              },
              method: "POST",
              success: function success(res) {
                console.log(res, 6666);
                cache.setSync('user', res.data.data);
                cache.setSync('loginFlag', true);
                that.globalData.openId = res.data.data.xcxOpenId;
                that.globalData.loginFlag = true;
                that.globalData.user = res.data.data;
                callback();
              },
              error: function error(err) {
                console.log(err);
              },
              fail: function fail(err) {
                wx.clearStorage();
                tip.showToast('貌似网络不好哦！请在网络顺畅的时候重新操作！');
              }
            });
          } else {
            // 获取 code 失败
            console.log('调用wx.login获取code失败');
          }
        },

        fail: function fail(error) {
          // 调用 wx.login 接口失败
          console.log('接口调用失败', error);
        }
      });
    }
  }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,